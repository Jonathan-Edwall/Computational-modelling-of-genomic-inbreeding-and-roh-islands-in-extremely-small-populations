# Display image using base R graphics functions
img <- png::readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
# setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$")
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
# Open a PNG device
grDevices::png(filename = file)
# Display image using base R graphics functions
img <- grDevices::readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the empirical data
setwd(German_shepherd_H_e_dir)
# List all PNG files in the directory
# png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
# Open a PNG device
png::png(filename = file)
# Display image using readPNG() from the png package
raster <- png::readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(raster, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
# setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
# Open a PNG device
grDevices::png(filename = file)
# Display image using base R graphics functions
img <- grDevices::readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
# setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
# Open a PNG device
png(filename = file)
# Display image using base R graphics functions
img <- readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
# setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
#png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
# Open a PNG device
png(filename = file)
# Display image using base R graphics functions
img <- readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
setwd(Neutral_model_H_e_dir)
# setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
#png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file)
# Display image using base R graphics functions
img <- readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
setwd(Neutral_model_H_e_dir)
# setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
#png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
setwd(Neutral_model_H_e_dir)
# setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
#png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
# graphics::plot.new()
# graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
setwd(Neutral_model_H_e_dir)
# setwd(new_dir)
# List all PNG files in the directory
png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
#png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
# graphics::plot.new()
# graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
setwd(Neutral_model_H_e_dir)
# setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
# graphics::plot.new()
# graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
setwd(Neutral_model_H_e_dir)
# setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
# graphics::plot.new()
# graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
# graphics::plot.new()
# graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# graphics::rasterImage(img, 0, 0, 1, 1)
# Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
#Close the PNG device
dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
file_path <- file.path(Neutral_model_H_e_dir,file)
# Open a PNG device
png(filename = file_path)
# Display image using base R graphics functions
img <- readPNG(file)
graphics::plot.new()
graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
graphics::rasterImage(img, 0, 0, 1, 1)
#Close the PNG device
#dev.off()
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
cat("File:", file, "\n")
# Display the image using include_graphics()
include_graphics(file)
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
file_path <- file.path(new_dir,file)
cat("File:", file, "\n")
# Display the image using include_graphics()
include_graphics(file_path)
}
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
file_path <- file.path(new_dir, file)
cat("File:", file, "\n")
# Display the image using include_graphics() from the knitr package
knitr::include_graphics(file_path)
}
# # Display each PNG file
# for (file in png_files) {
#   cat("File:", file, "\n")
#   file_path <- file.path(Neutral_model_H_e_dir,file)
#   # Open a PNG device
#   png(filename = file_path)
#   # Display image using base R graphics functions
#   img <- readPNG(file)
#   graphics::plot.new()
#   graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
#   graphics::rasterImage(img, 0, 0, 1, 1)
#   #Close the PNG device
#   dev.off()
# }
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "\\.png$", full.names = TRUE)
png_files <- list.files(pattern = "\\.png$")
library(png)
# Display each PNG file
for (file in png_files) {
file_path <- file.path(new_dir, file)
cat("File:", file, "\n")
# Display the image using include_graphics() from the knitr package
knitr::include_graphics(file_path)
}
# # Display each PNG file
# for (file in png_files) {
#   cat("File:", file, "\n")
#   file_path <- file.path(Neutral_model_H_e_dir,file)
#   # Open a PNG device
#   png(filename = file_path)
#   # Display image using base R graphics functions
#   img <- readPNG(file)
#   graphics::plot.new()
#   graphics::plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
#   graphics::rasterImage(img, 0, 0, 1, 1)
#   #Close the PNG device
#   dev.off()
# }
expected_heterozygosity_dir
Neutral_model_H_e_dir
file_path
file_path
Neutral_model_H_e_dir
# Clean the working environment
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
####################################
# Defining the working directory
####################################
# Set the path to your GitHub folder
YOUR_GITHUB_ROOT_DIRECTORY <- "C://Users//jonat//GitHub"
# Defining the relative path in the repository
repository_path <- file.path(YOUR_GITHUB_ROOT_DIRECTORY,"Computational-modelling-of-genomic-inbreeding-and-roh-islands-in-extremely-small-populations")
####################################
# Defining the input file
####################################
ROH_hotspots_dir <- file.path(repository_path,"results//ROH-Hotspots")
plink_ROH_dir <- file.path(repository_path,"results//PLINK//ROH")
expected_heterozygosity_dir <- file.path(repository_path,"results//expected_heterozygosity")
Selection_strength_test_dir <- file.path(ROH_hotspots_dir,"selection_strength_test")
Sweep_test_dir <- file.path(ROH_hotspots_dir,"sweep_test")
###############
## Empirical ###
###############
### ROH hotspots ###
German_shepherd_ROH_hotspots_dir  <- file.path(ROH_hotspots_dir,"empirical//german_shepherd")
### Inbreeding coefficient ###
German_shepherd_F_ROH_dir  <- file.path(plink_ROH_dir,"empirical//doi_10_5061_dryad_h44j0zpkf__v20210813//F_ROH")
### Expected Heterozygosity distribution ###
German_shepherd_H_e_dir <- file.path(expected_heterozygosity_dir,"empirical//german_shepherd")
###############
## Simulated ###
###############
### ROH hotspots ###
Neutral_model_ROH_hotspots_dir  <- file.path(ROH_hotspots_dir,"simulated//neutral_model")
Selection_model_ROH_hotspots_dir  <- file.path(ROH_hotspots_dir,"simulated//selection_model")
### Inbreeding coefficient ###
Neutral_model_F_ROH_dir  <- file.path(plink_ROH_dir,"simulated//neutral_model//F_ROH")
Selection_model_F_ROH_dir  <- file.path(plink_ROH_dir,"simulated//selection_model//F_ROH")
### Expected Heterozygosity distribution ###
Neutral_model_H_e_dir <- file.path(expected_heterozygosity_dir,"simulated//neutral_model")
Selection_model_H_e_dir <- file.path(expected_heterozygosity_dir,"simulated//selection_model")
histogram_line_sizes <- 3
empirical_data_color <- "darkgreen"
neutral_model_color <- "blue"
selection_model_color <- "purple"
#
# ## Extracting the prefix of the file used
# # Extracting the basename (filename without extension) from the file path
# filename <- basename(input_file)
# # Split the filename by "_ROH_freq.bed" and get the first part
# prefix <- strsplit(filename, "_ROH_freq.bed")[[1]][1]
# # Output the prefix
# print(prefix)
# ####################################
# # Defining the output dirs
# ####################################
#
# output_dir <- file.path(repository_path,"results//ROH-Hotspots//simulated//selection_model")
#
# # Set the working directory for notebook chunks
# knitr::opts_knit$set(root.dir = output_dir)
#
# # Output dir for section 3.2
# output_dir_gapless_roh_hotspots <- file.path(output_dir, "gapless_roh_hotspots")
# if (!dir.exists(output_dir_gapless_roh_hotspots)) {
#   # Create the working directory if it doesn't exist
#   dir.create(output_dir_gapless_roh_hotspots, recursive = TRUE)
# }
#
# # Output dir for section 2
# output_dir_gosling_plots <- file.path(output_dir, "Gosling_plots")
#
# output_dir_autosome_roh_freq <- file.path(output_dir_gosling_plots, "autosome_roh_freq")
#
#
# if (!dir.exists(output_dir_autosome_roh_freq)) {
#   # Create the working directory if it doesn't exist
#   dir.create(output_dir_autosome_roh_freq, recursive = TRUE)
# }
# print(output_dir_autosome_roh_freq)
#
# output_dir_roh_hotspots_freq <- file.path(output_dir_gosling_plots, "roh_hotspots_freq")
# if (!dir.exists(output_dir_roh_hotspots_freq)) {
#   # Create the working directory if it doesn't exist
#   dir.create(output_dir_roh_hotspots_freq, recursive = TRUE)
# }
#
#
#
#
#
#
#
#
#
# # Set the working directory for notebook chunks
# knitr::opts_knit$set(root.dir = output_dir)
####################################
# Defining Input parameters
####################################
# # Verify the current working directory
# getwd()
# Set the working directory to the directory containing the H_e files for the Neutral Model
new_dir <- file.path(Neutral_model_H_e_dir,"test")
#setwd(Neutral_model_H_e_dir)
setwd(new_dir)
# List all PNG files in the directory
#png_files <- list.files(pattern = "////.png$", full.names = TRUE)
png_files <- list.files(pattern = "////.png$")
library(png)
# Display each PNG file
for (file in png_files) {
file_path <- file.path(new_dir, file)
cat("File:", file, "//n")
# Display the image using include_graphics() from the knitr package
knitr::include_graphics(file_path)
}
knitr::include_graphics("img",/rmarkdown_hex.png")
